name: build-release

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    permissions:
      packages: write
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Nix
      uses: cachix/install-nix-action@v17
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Build For Windows
      run: nix develop --command ./buildForWindows.sh
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_id }}
        release_name: Release V${{ github.run_id }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./build/excel-automations.zip
        asset_name: excel-automations.zip
        asset_content_type: application/zip
